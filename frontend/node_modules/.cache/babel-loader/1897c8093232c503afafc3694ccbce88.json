{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/basis/frontend/src/pages/Auth/ResetPassword.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin: 0 auto;\\n  background-color: \", \";\\n  padding: \", \";\\n  border-radius: \", \";\\n  margin-top: 80px;\\n\\n  @media (min-width: \", \") {\\n    width: 450px;\\n  }\\n\\n  @media (min-width: \", \") {\\n    margin-top: auto;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Spacing } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { Loading } from 'components/Loading';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\nimport * as Routes from 'routes';\nvar Root = styled.div(_templateObject(), function (p) {\n  return p.theme.spacing.sm;\n});\nvar Container = styled.div(_templateObject2(), function (p) {\n  return p.theme.colors.white;\n}, function (p) {\n  return p.theme.spacing.md;\n}, function (p) {\n  return p.theme.radius.sm;\n}, function (p) {\n  return p.theme.screen.sm;\n}, function (p) {\n  return p.theme.screen.md;\n});\n/**\n * Reset password page\n */\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var history = _ref.history,\n      location = _ref.location,\n      refetch = _ref.refetch;\n\n  var _useState = useState({\n    password: '',\n    confirmPassword: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mutationError = _useState6[0],\n      setMutationError = _useState6[1];\n\n  var url = new URLSearchParams(location.search);\n  var email = url.get('email');\n  var token = url.get('token');\n\n  var _useQuery = useQuery(VERIFY_RESET_PASSWORD_TOKEN, {\n    variables: {\n      email,\n      token\n    }\n  }),\n      queryLoading = _useQuery.queryLoading,\n      queryError = _useQuery.error;\n\n  var password = values.password,\n      confirmPassword = values.confirmPassword;\n\n  var _useMutation = useMutation(RESET_PASSWORD),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      mutationLoading = _useMutation2[1].loading;\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value\n    }));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(!password || !confirmPassword)) {\n                _context.next = 6;\n                break;\n              }\n\n              setError('Enter password and Confirm password.');\n              return _context.abrupt(\"return\");\n\n            case 6:\n              if (!(password.length < 6)) {\n                _context.next = 11;\n                break;\n              }\n\n              setError('Password min 6 characters');\n              return _context.abrupt(\"return\");\n\n            case 11:\n              if (!(password !== confirmPassword)) {\n                _context.next = 14;\n                break;\n              }\n\n              setError(\"Passwords don't match.\");\n              return _context.abrupt(\"return\");\n\n            case 14:\n              setError('');\n              setMutationError('');\n              _context.prev = 16;\n              _context.next = 19;\n              return resetPassword({\n                variables: {\n                  input: {\n                    email,\n                    password,\n                    token\n                  }\n                }\n              });\n\n            case 19:\n              response = _context.sent;\n              localStorage.setItem('token', response.data.resetPassword.token);\n              _context.next = 23;\n              return refetch();\n\n            case 23:\n              history.push(Routes.HOME);\n              _context.next = 29;\n              break;\n\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](16);\n              setMutationError(_context.t0.graphQLErrors[0].message);\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[16, 26]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Root, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Head, {\n    title: \"Reset Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, queryLoading && /*#__PURE__*/React.createElement(Loading, {\n    top: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }\n  }), mutationError || queryError ? /*#__PURE__*/React.createElement(Spacing, {\n    bottom: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, mutationError ? mutationError : queryError.graphQLErrors[0].message)) : '', /*#__PURE__*/React.createElement(Spacing, {\n    bottom: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(H1, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Password Reset\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e, resetPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    type: \"password\",\n    name: \"password\",\n    values: password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Spacing, {\n    top: \"xs\",\n    bottom: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    values: confirmPassword,\n    onChange: handleChange,\n    placeholder: \"Confirm Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), error && /*#__PURE__*/React.createElement(Spacing, {\n    bottom: \"sm\",\n    top: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, error)), /*#__PURE__*/React.createElement(Button, {\n    disabled: mutationLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Reset Password\")))));\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired\n};\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["/Users/user/basis/frontend/src/pages/Auth/ResetPassword.js"],"names":["React","useState","styled","PropTypes","withRouter","useQuery","useMutation","Spacing","H1","Error","Loading","InputText","Button","Head","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","Routes","Root","div","p","theme","spacing","sm","Container","colors","white","md","radius","screen","ResetPassword","history","location","refetch","password","confirmPassword","values","setValues","error","setError","mutationError","setMutationError","url","URLSearchParams","search","email","get","token","variables","queryLoading","queryError","resetPassword","mutationLoading","loading","handleChange","e","target","name","value","handleSubmit","preventDefault","length","input","response","localStorage","setItem","data","push","HOME","graphQLErrors","message","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Spacing } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { Loading } from 'components/Loading';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  margin-top: 80px;\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\n/**\n * Reset password page\n */\nconst ResetPassword = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ password: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n  const [mutationError, setMutationError] = useState('');\n  const url = new URLSearchParams(location.search);\n  const email = url.get('email');\n  const token = url.get('token');\n  const { queryLoading, error: queryError } = useQuery(VERIFY_RESET_PASSWORD_TOKEN, {\n    variables: { email, token },\n  });\n  const { password, confirmPassword } = values;\n  const [resetPassword, { loading: mutationLoading }] = useMutation(RESET_PASSWORD);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!password || !confirmPassword) {\n      setError('Enter password and Confirm password.');\n      return;\n    } else if (password.length < 6) {\n      setError('Password min 6 characters');\n      return;\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n\n    setError('');\n    setMutationError('');\n    try {\n      const response = await resetPassword({\n        variables: { input: { email, password, token } },\n      });\n      localStorage.setItem('token', response.data.resetPassword.token);\n      await refetch();\n      history.push(Routes.HOME);\n    } catch (error) {\n      setMutationError(error.graphQLErrors[0].message);\n    }\n  };\n\n  return (\n    <Root>\n      <Head title=\"Reset Password\" />\n\n      <Container>\n        <>\n          {queryLoading && <Loading top=\"lg\" />}\n          {mutationError || queryError ? (\n            <Spacing bottom=\"md\">\n              <Error>{mutationError ? mutationError : queryError.graphQLErrors[0].message}</Error>\n            </Spacing>\n          ) : (\n            ''\n          )}\n\n          <Spacing bottom=\"md\">\n            <H1>Password Reset</H1>\n          </Spacing>\n\n          <form onSubmit={(e) => handleSubmit(e, resetPassword)}>\n            <InputText\n              type=\"password\"\n              name=\"password\"\n              values={password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n            />\n\n            <Spacing top=\"xs\" bottom=\"sm\">\n              <InputText\n                type=\"password\"\n                name=\"confirmPassword\"\n                values={confirmPassword}\n                onChange={handleChange}\n                placeholder=\"Confirm Password\"\n              />\n            </Spacing>\n\n            {error && (\n              <Spacing bottom=\"sm\" top=\"sm\">\n                <Error>{error}</Error>\n              </Spacing>\n            )}\n\n            <Button disabled={mutationLoading}>Reset Password</Button>\n          </form>\n        </>\n      </Container>\n    </Root>\n  );\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}