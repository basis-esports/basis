{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/basis/frontend/src/components/App/Notification.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  display: block;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 40px;\\n  height: 40px;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  flex: 1;\\n  margin-left: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: \", \";\\n  border-bottom: 1px solid \", \";\\n  font-size: \", \";\\n  background-color: \", \";\\n\\n  &:last-child {\\n    border-bottom: 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { UPDATE_NOTIFICATION_SEEN } from 'graphql/notification';\nimport { useStore } from 'store';\nimport * as Routes from 'routes';\nvar NotificationItem = styled.div(_templateObject(), function (p) {\n  return p.theme.spacing.xs;\n}, function (p) {\n  return p.theme.colors.border.main;\n}, function (p) {\n  return p.theme.font.size.xxs;\n}, function (p) {\n  return p.theme.colors.white;\n});\nvar LeftSide = styled.div(_templateObject2());\nvar Name = styled.div(_templateObject3(), function (p) {\n  return p.theme.font.weight.bold;\n});\nvar Action = styled.div(_templateObject4(), function (p) {\n  return p.theme.spacing.xs;\n});\nvar PostImage = styled.div(_templateObject5());\nvar Image = styled.img(_templateObject6());\n/**\n * Renders user notifications\n */\n\nvar Notification = function Notification(_ref) {\n  var notification = _ref.notification,\n      close = _ref.close;\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var client = useApolloClient();\n  var ref = React.useRef(null);\n  useClickOutside(ref, close);\n  useEffect(function () {\n    var updateNotificationSeen = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return client.mutate({\n                  mutation: UPDATE_NOTIFICATION_SEEN,\n                  variables: {\n                    input: {\n                      userId: auth.user.id\n                    }\n                  },\n                  refetchQueries: function refetchQueries() {\n                    return [{\n                      query: GET_AUTH_USER\n                    }];\n                  }\n                });\n\n              case 3:\n                _context.next = 7;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function updateNotificationSeen() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    updateNotificationSeen();\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\n\n  if (!notification.follow && !notification.like && !notification.comment) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NotificationItem, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(A, {\n    to: generatePath(Routes.USER_PROFILE, {\n      username: notification.author.username\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LeftSide, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    image: notification.author.image,\n    size: 34,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Spacing, {\n    left: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Name, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, notification.author.fullName))), notification.follow && /*#__PURE__*/React.createElement(Action, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }\n  }, \"started following you\"), notification.like && /*#__PURE__*/React.createElement(Action, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"likes your photo\", /*#__PURE__*/React.createElement(A, {\n    to: generatePath(Routes.POST, {\n      id: notification.like.post.id\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PostImage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: notification.like.post.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })))), notification.comment && /*#__PURE__*/React.createElement(Action, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"commented on your photo\", /*#__PURE__*/React.createElement(A, {\n    to: generatePath(Routes.POST, {\n      id: notification.comment.post.id\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PostImage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: notification.comment.post.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })))));\n};\n\nNotification.propTypes = {\n  close: PropTypes.func\n};\nexport default Notification;","map":{"version":3,"sources":["/Users/user/basis/frontend/src/components/App/Notification.js"],"names":["React","useEffect","PropTypes","generatePath","styled","useApolloClient","A","Spacing","Avatar","useClickOutside","GET_AUTH_USER","UPDATE_NOTIFICATION_SEEN","useStore","Routes","NotificationItem","div","p","theme","spacing","xs","colors","border","main","font","size","xxs","white","LeftSide","Name","weight","bold","Action","PostImage","Image","img","Notification","notification","close","auth","client","ref","useRef","updateNotificationSeen","mutate","mutation","variables","input","userId","user","id","refetchQueries","query","newNotifications","length","follow","like","comment","USER_PROFILE","username","author","image","fullName","POST","post","propTypes","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,SAASC,CAAT,QAAkB,iBAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,IAAMC,gBAAgB,GAAGV,MAAM,CAACW,GAAV,oBAKT,UAACC,CAAD;AAAA,SAAOA,CAAC,CAACC,KAAF,CAAQC,OAAR,CAAgBC,EAAvB;AAAA,CALS,EAMO,UAACH,CAAD;AAAA,SAAOA,CAAC,CAACC,KAAF,CAAQG,MAAR,CAAeC,MAAf,CAAsBC,IAA7B;AAAA,CANP,EAOP,UAACN,CAAD;AAAA,SAAOA,CAAC,CAACC,KAAF,CAAQM,IAAR,CAAaC,IAAb,CAAkBC,GAAzB;AAAA,CAPO,EAQA,UAACT,CAAD;AAAA,SAAOA,CAAC,CAACC,KAAF,CAAQG,MAAR,CAAeM,KAAtB;AAAA,CARA,CAAtB;AAeA,IAAMC,QAAQ,GAAGvB,MAAM,CAACW,GAAV,oBAAd;AAMA,IAAMa,IAAI,GAAGxB,MAAM,CAACW,GAAV,qBACO,UAACC,CAAD;AAAA,SAAOA,CAAC,CAACC,KAAF,CAAQM,IAAR,CAAaM,MAAb,CAAoBC,IAA3B;AAAA,CADP,CAAV;AAIA,IAAMC,MAAM,GAAG3B,MAAM,CAACW,GAAV,qBAMK,UAACC,CAAD;AAAA,SAAOA,CAAC,CAACC,KAAF,CAAQC,OAAR,CAAgBC,EAAvB;AAAA,CANL,CAAZ;AASA,IAAMa,SAAS,GAAG5B,MAAM,CAACW,GAAV,oBAAf;AAMA,IAAMkB,KAAK,GAAG7B,MAAM,CAAC8B,GAAV,oBAAX;AAOA;AACA;AACA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA6B;AAAA,MAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAC7BzB,QAAQ,EADqB;AAAA;AAAA,MACvC0B,IADuC,iBACvCA,IADuC;;AAEhD,MAAMC,MAAM,GAAGlC,eAAe,EAA9B;AACA,MAAMmC,GAAG,GAAGxC,KAAK,CAACyC,MAAN,CAAa,IAAb,CAAZ;AAEAhC,EAAAA,eAAe,CAAC+B,GAAD,EAAMH,KAAN,CAAf;AAEApC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMyC,sBAAsB;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAErBH,MAAM,CAACI,MAAP,CAAc;AAClBC,kBAAAA,QAAQ,EAAEjC,wBADQ;AAElBkC,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,KAAK,EAAE;AACLC,sBAAAA,MAAM,EAAET,IAAI,CAACU,IAAL,CAAUC;AADb;AADE,mBAFO;AAOlBC,kBAAAA,cAAc,EAAE;AAAA,2BAAM,CAAC;AAAEC,sBAAAA,KAAK,EAAEzC;AAAT,qBAAD,CAAN;AAAA;AAPE,iBAAd,CAFqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAtBgC,sBAAsB;AAAA;AAAA;AAAA,OAA5B;;AAcAA,IAAAA,sBAAsB;AACvB,GAhBQ,EAgBN,CAACJ,IAAI,CAACU,IAAL,CAAUC,EAAX,EAAeX,IAAI,CAACU,IAAL,CAAUI,gBAAV,CAA2BC,MAA1C,EAAkDd,MAAlD,CAhBM,CAAT;;AAkBA,MAAI,CAACH,YAAY,CAACkB,MAAd,IAAwB,CAAClB,YAAY,CAACmB,IAAtC,IAA8C,CAACnB,YAAY,CAACoB,OAAhE,EAAyE;AACvE,WAAO,IAAP;AACD;;AAED,sBACE,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEhB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD;AACE,IAAA,EAAE,EAAErC,YAAY,CAACU,MAAM,CAAC4C,YAAR,EAAsB;AACpCC,MAAAA,QAAQ,EAAEtB,YAAY,CAACuB,MAAb,CAAoBD;AADM,KAAtB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEtB,YAAY,CAACuB,MAAb,CAAoBC,KAAnC;AAA0C,IAAA,IAAI,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOxB,YAAY,CAACuB,MAAb,CAAoBE,QAA3B,CALF,CALF,CADF,EAeGzB,YAAY,CAACkB,MAAb,iBAAuB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAf1B,EAiBGlB,YAAY,CAACmB,IAAb,iBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAEpD,YAAY,CAACU,MAAM,CAACiD,IAAR,EAAc;AAAEb,MAAAA,EAAE,EAAEb,YAAY,CAACmB,IAAb,CAAkBQ,IAAlB,CAAuBd;AAA7B,KAAd,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEb,YAAY,CAACmB,IAAb,CAAkBQ,IAAlB,CAAuBH,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CAlBJ,EA4BGxB,YAAY,CAACoB,OAAb,iBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEE,oBAAC,CAAD;AAAG,IAAA,EAAE,EAAErD,YAAY,CAACU,MAAM,CAACiD,IAAR,EAAc;AAAEb,MAAAA,EAAE,EAAEb,YAAY,CAACoB,OAAb,CAAqBO,IAArB,CAA0Bd;AAAhC,KAAd,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEb,YAAY,CAACoB,OAAb,CAAqBO,IAArB,CAA0BH,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CA7BJ,CADF;AAyCD,CAtED;;AAwEAzB,YAAY,CAAC6B,SAAb,GAAyB;AACvB3B,EAAAA,KAAK,EAAEnC,SAAS,CAAC+D;AADM,CAAzB;AAIA,eAAe9B,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { UPDATE_NOTIFICATION_SEEN } from 'graphql/notification';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst NotificationItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  background-color: ${(p) => p.theme.colors.white};\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst Action = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n  margin-left: ${(p) => p.theme.spacing.xs};\n`;\n\nconst PostImage = styled.div`\n  width: 40px;\n  height: 40px;\n  overflow: hidden;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n`;\n\n/**\n * Renders user notifications\n */\nconst Notification = ({ notification, close }) => {\n  const [{ auth }] = useStore();\n  const client = useApolloClient();\n  const ref = React.useRef(null);\n\n  useClickOutside(ref, close);\n\n  useEffect(() => {\n    const updateNotificationSeen = async () => {\n      try {\n        await client.mutate({\n          mutation: UPDATE_NOTIFICATION_SEEN,\n          variables: {\n            input: {\n              userId: auth.user.id,\n            },\n          },\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\n        });\n      } catch (err) {}\n    };\n\n    updateNotificationSeen();\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\n\n  if (!notification.follow && !notification.like && !notification.comment) {\n    return null;\n  }\n\n  return (\n    <NotificationItem ref={ref}>\n      <A\n        to={generatePath(Routes.USER_PROFILE, {\n          username: notification.author.username,\n        })}\n      >\n        <LeftSide>\n          <Avatar image={notification.author.image} size={34} />\n\n          <Spacing left=\"xs\" />\n\n          <Name>{notification.author.fullName}</Name>\n        </LeftSide>\n      </A>\n\n      {notification.follow && <Action>started following you</Action>}\n\n      {notification.like && (\n        <Action>\n          likes your photo\n          <A to={generatePath(Routes.POST, { id: notification.like.post.id })}>\n            <PostImage>\n              <Image src={notification.like.post.image} />\n            </PostImage>\n          </A>\n        </Action>\n      )}\n\n      {notification.comment && (\n        <Action>\n          commented on your photo\n          <A to={generatePath(Routes.POST, { id: notification.comment.post.id })}>\n            <PostImage>\n              <Image src={notification.comment.post.image} />\n            </PostImage>\n          </A>\n        </Action>\n      )}\n    </NotificationItem>\n  );\n};\n\nNotification.propTypes = {\n  close: PropTypes.func,\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}