{"ast":null,"code":"import _slicedToArray from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/user/basis/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/basis/frontend/src/pages/Home/Home.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-decoration: underline;\\n  font-weight: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: \", \";\\n  border: 1px solid \", \";\\n  border-radius: \", \";\\n  margin-top: \", \";\\n  background-color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { A } from 'components/Text';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport PostCard from 'components/PostCard';\nimport { Spacing, Container } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Skeleton from 'components/Skeleton';\nimport CreatePost from 'components/CreatePost';\nimport Head from 'components/Head';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { useStore } from 'store';\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport * as Routes from 'routes';\nvar Empty = styled.div(_templateObject(), function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.colors.border.main;\n}, function (p) {\n  return p.theme.radius.sm;\n}, function (p) {\n  return p.theme.spacing.lg;\n}, function (p) {\n  return p.theme.colors.white;\n});\nvar StyledA = styled(A)(_templateObject2(), function (p) {\n  return p.theme.font.weight.bold;\n});\n/**\n * Home page of the app\n */\n\nvar Home = function Home() {\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalPostId = _useState2[0],\n      setModalPostId = _useState2[1];\n\n  var variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT\n  };\n\n  var _useQuery = useQuery(GET_FOLLOWED_POSTS, {\n    variables,\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var closeModal = function closeModal() {\n    window.history.pushState('', '', '/');\n    setModalPostId(null);\n  };\n\n  var _openModal = function openModal(postId) {\n    window.history.pushState('', '', generatePath(Routes.POST, {\n      id: postId\n    }));\n    setModalPostId(postId);\n  };\n\n  var renderContent = function renderContent() {\n    if (loading && networkStatus === 1) {\n      return /*#__PURE__*/React.createElement(Skeleton, {\n        height: 500,\n        bottom: \"lg\",\n        top: \"lg\",\n        count: HOME_PAGE_POSTS_LIMIT,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var _data$getFollowedPost = data.getFollowedPosts,\n        posts = _data$getFollowedPost.posts,\n        count = _data$getFollowedPost.count;\n\n    if (!posts.length) {\n      return /*#__PURE__*/React.createElement(Empty, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(StyledA, {\n        to: generatePath(Routes.EXPLORE),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Explore new posts\"), \" or\", ' ', /*#__PURE__*/React.createElement(StyledA, {\n        to: generatePath(Routes.PEOPLE),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"Find new people\"));\n    }\n\n    return /*#__PURE__*/React.createElement(InfiniteScroll, {\n      data: posts,\n      dataKey: \"getFollowedPosts.posts\",\n      count: parseInt(count),\n      variables: variables,\n      fetchMore: fetchMore,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, function (data) {\n      var showNextLoading = loading && networkStatus === 3 && count !== data.length;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, data.map(function (post) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          key: post.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Modal, {\n          open: modalPostId === post.id,\n          onClose: closeModal,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(PostPopup, {\n          id: post.id,\n          closeModal: closeModal,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Spacing, {\n          bottom: \"lg\",\n          top: \"lg\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(PostCard, {\n          author: post.author,\n          imagePublicId: post.imagePublicId,\n          postId: post.id,\n          comments: post.comments,\n          createdAt: post.createdAt,\n          title: post.title,\n          image: post.image,\n          likes: post.likes,\n          openModal: function openModal() {\n            return _openModal(post.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        })));\n      }), showNextLoading && /*#__PURE__*/React.createElement(Loading, {\n        top: \"lg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 35\n        }\n      }));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Spacing, {\n    top: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreatePost, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), renderContent());\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/user/basis/frontend/src/pages/Home/Home.js"],"names":["React","useState","Fragment","styled","generatePath","useQuery","A","PostPopup","Modal","PostCard","Spacing","Container","Loading","InfiniteScroll","Skeleton","CreatePost","Head","GET_FOLLOWED_POSTS","useStore","HOME_PAGE_POSTS_LIMIT","Routes","Empty","div","p","theme","spacing","sm","colors","border","main","radius","lg","white","StyledA","font","weight","bold","Home","auth","modalPostId","setModalPostId","variables","userId","user","id","skip","limit","notifyOnNetworkStatusChange","data","loading","fetchMore","networkStatus","closeModal","window","history","pushState","openModal","postId","POST","renderContent","getFollowedPosts","posts","count","length","EXPLORE","PEOPLE","parseInt","showNextLoading","map","post","author","imagePublicId","comments","createdAt","title","image","likes"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { A } from 'components/Text';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport PostCard from 'components/PostCard';\nimport { Spacing, Container } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Skeleton from 'components/Skeleton';\nimport CreatePost from 'components/CreatePost';\nimport Head from 'components/Head';\n\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { useStore } from 'store';\n\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport * as Routes from 'routes';\n\nconst Empty = styled.div`\n  padding: ${(p) => p.theme.spacing.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n  border-radius: ${(p) => p.theme.radius.sm};\n  margin-top: ${(p) => p.theme.spacing.lg};\n  background-color: ${(p) => p.theme.colors.white};\n`;\n\nconst StyledA = styled(A)`\n  text-decoration: underline;\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\n/**\n * Home page of the app\n */\nconst Home = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_FOLLOWED_POSTS, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/');\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return <Skeleton height={500} bottom=\"lg\" top=\"lg\" count={HOME_PAGE_POSTS_LIMIT} />;\n    }\n\n    const { posts, count } = data.getFollowedPosts;\n    if (!posts.length) {\n      return (\n        <Empty>\n          <StyledA to={generatePath(Routes.EXPLORE)}>Explore new posts</StyledA> or{' '}\n          <StyledA to={generatePath(Routes.PEOPLE)}>Find new people</StyledA>\n        </Empty>\n      );\n    }\n\n    return (\n      <InfiniteScroll\n        data={posts}\n        dataKey=\"getFollowedPosts.posts\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n              {data.map((post) => (\n                <Fragment key={post.id}>\n                  <Modal open={modalPostId === post.id} onClose={closeModal}>\n                    <PostPopup id={post.id} closeModal={closeModal} />\n                  </Modal>\n\n                  <Spacing bottom=\"lg\" top=\"lg\">\n                    <PostCard\n                      author={post.author}\n                      imagePublicId={post.imagePublicId}\n                      postId={post.id}\n                      comments={post.comments}\n                      createdAt={post.createdAt}\n                      title={post.title}\n                      image={post.image}\n                      likes={post.likes}\n                      openModal={() => openModal(post.id)}\n                    />\n                  </Spacing>\n                </Fragment>\n              ))}\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Head />\n\n      <Spacing top=\"lg\" />\n\n      <CreatePost />\n\n      {renderContent()}\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}